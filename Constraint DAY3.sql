--FOREIGN KEY CONSTRAINT
Used to prevent actions that would destroy links between the tables.

DROP TABLE IF EXISTS EMPLOYEE
CREATE TABLE EMPLOYEE
(
EMPID INT,
FNAME VARCHAR(10),
LNAME VARCHAR(10),
AGE INT,
DEPARTMENTID INT
)

CREATE TABLE DEPARTMENT
(
DEPID INT,
DEPNAME VARCHAR(20),
LOCATION VARCHAR(20)
)

SELECT *FROM DEPARTMENT
SELECT *FROM EMPLOYEE

INSERT INTO DEPARTMENT VALUES
(1,'MARKETING','MUMBAI'),
(2,'SALES','DELHI'),
(3,'IT-SOFTWARE','NEW YORK')

INSERT INTO EMPLOYEE VALUES
(4,'JYOTI','KHANNA',35,5),
(1,'TOM','JERRY',33,2),
(2,'SHIV','SHARMA',30,1),
(3,'PRAVIN','SHARMA',45,3)

--THERE IS A LINK BETWEEN TWO TABLES, DEPTID.COLUMN NAME SHOULD NOT BE SAME BUT VALUE SHOULD BE SAME
--DEPARTMENT TABLE IS A PRIMARY TABLE
--WHEN WE DO NOT HAVE RELATION BETWEEN TWO TABLES WE CAN INSERT ANY NUMBER OF DATA.

UPDATE EMPLOYEE SET DEPARTMENTID = 4 WHERE EMPID = 2

DELETE FROM DEPARTMENT WHERE DEPID = 2

--WHEN TTHERE IS NO RELATION WE CAN PERFORM UPDATE,DELETE,INSERT OPERATIONS.
--WHEN WE DO NOT WANT TO DELETE/INSERT ANY DATA FROM PRIMARY TABLE, WE CAN CREATE RELATION CALLED FOREIGN KEY RELATIONSHIP.

SYNTAX
CREATE TABLE TABLE_NAME(
COLUMN1 DATA_TYPE,
COLUMN2 DATA_TYPE,
...,
FOREIGN KEY (COLUMN_NAME)
REFERENCES REFERENCED_TABLE_NAME (REFERENCED_COLUMN_NAME)

--WHATEVER THE COLUMN WE ARE REFERENCING ,REFERENCED_COLUMN_NAME SHOULD BE THE PRIMARY KEY.
-- THE REFERENCED COLUMN SHOULD BE THE PRIMARY KEY 

DROP TABLE IF EXISTS EMPLOYEE
CREATE TABLE EMPLOYEE
(
EMPID INT,
FNAME VARCHAR(10),
LNAME VARCHAR(10),
AGE INT,
DEPARTMENTID INT
FOREIGN KEY (DEPARTMENTID) --(FOREIGN KEY COLUMN -SAME TABLE)
REFERENCES DEPARTMENT(DEPID) --REFERENCED_TABLE(REFERENCE COLUMN)
)

DROP TABLE IF EXISTS DEPARTMENT
CREATE TABLE DEPARTMENT
(
DEPID INT PRIMARY KEY,
DEPNAME VARCHAR(20),
LOCATION VARCHAR(20)
)

--DEPARTMENT TABLE IS NOT REFERENCING ANY DATA FROM OTHER TABLE -- THIS IS PARENT/PRIMARY TABLE
--EMPLOYEE TABLE IS REFERENCING DEPID FROM DEPARTMENT TABLE - THIS IS CHILD TABLE

INSERT INTO DEPARTMENT VALUES
(4,'HUMAN RESOURCE','NEW YORK')
(1,'MARKETING','MUMBAI'),
(2,'SALES','DELHI'),
(3,'IT-SOFTWARE','NEW YORK')

INSERT INTO DEPARTMENT VALUES (3,'IT-SOFTWARE','NEW YORK')


INSERT INTO EMPLOYEE VALUES
(5,'RAJ','WANKAR',33,4),
(4,'JYOTI','KHANNA',33,2),
(1,'TOM','JERRY', 33,2),
(2,'SHIV','SHARMA',30,1),
(3,'PRAVIN','SHARMA',45,3)

--FOR INSERTING DATA, DATA NEEDS TO BE FIRST INSERTED INTO THE PRIMARY TABLE FIRST,THEN ONLY TO THE CHILD TABLE.

UPDATE EMPLOYEE SET DEPARTMENTID=3 WHERE EMPID=2

DELETE FROM EMPLOYEE WHERE DEPARTMENTID = 3

DELETE FROM DEPARTMENT WHERE DEPID = 3

DELETE FROM DEPARTMENT WHERE DEPID=1
DELETE FROM DEPARTMENT WHERE DEPID=2
--The DELETE statement conflicted with the REFERENCE constraint "FK__EMPLOYEE__DEPART__46B27FE2". The conflict occurred in database "ZORBA_1017"

SELECT *FROM EMPLOYEE
SELECT *FROM DEPARTMENT

DROP TABLE DEPARTMENT
--Could not drop object 'DEPARTMENT' because it is referenced by a FOREIGN KEY constraint.


WE CAN DELETE THOSE VALUES FROM THE CHILD TABLE WHICH IS NOT REFERENCED IN PARENT TABLE.

--ANY TABLE WHICH IS NOT REFERENCED IN THE FOREIGN KEY, WE CANNOT DROP.



IF WE DEFINE RELATIONS BETWEEN TWO TABLES, WE CAN 

--WE WILL BE ABLE TO INSERT/REFER ONLY THOSE DEPTID WHICH ARE PRESENT IN DEPT TABLE
--WE CANNOT DELETE THE DEPT ID IN DEPT TABLE WHICH ARE REFERENCED IN EMPLOYEE TABLE
--WE CANNOT UPDATE THE EMPLOYEE TABLE DEPTID COLUMN TO VALUES WHICH ARE NOT AVAILABLE IN DEPT TABLE
--TO CREATE THE FOREIGN KEY --- 2 TABLES MUST HAVE 1 COMMON COLUN (WHICH HOLDS COMMON DATA)

--STEPS/RULES
1) WE SHOULD HAVE COMMON COLUMN IN 2 TABLES (WHICH HOLDS COMMON DATA)
2)THE COLUMN WE ARE USING AS REDERENCE COLUMN --THAT SHOULD BE PRIMARY KEY IN TABLE
--THE PARENT TABLE/PRIMARY TABLE SHOULD HAVE THE PRIMARY KEY DEFINED ON THE COLUMN
--THE COLUMN IN PARENT TABLE HAVING PRIMARY KEY CAN BE USED AS REFERENCE

FROM TWO TABLE, ONE OF THE TABLE IS GOING TO REFER VALUES FROM OTHER TABLE, IN THAT TABLE WE HAVE TO CREATE FOREIGN KEY.
FOREIGN KEY SHOULD BE CREATED IN CHILD TABLE
--

CUSTOMER TABLE - CUSTID,NAME,CITY........PRIMARY TABLE
ORDERS TABLE ---ORDERID,AMOUNT,ITEM,CUSTID.....CHILD TABLE

TRANSACTION TABLE --TRANID,TRANAMT,ORDERID,CUSTID
--PRIMARY KEY COLUMN OF THE PARENT TABLE WIL BE THE FOREIGN KEY COLUMN IN CHILD TABLE

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--LINK BETWEEN TWO TABLES THAT WILL PREVENT ACTION TO DESTROY THE DATA.

--MSSQL IS A RELATIONAL DATABASE
--WE CAN HAVE MULTIPLE FOREIGN KEY BUT ONLY ONE PRIMARY KEY.

--WE HAVE TO DELETE DATA FROM THE CHILD TABLE FIRST, THEN ONLY IN THE PRIMARY TABLW.
--FOR INSERTING DATA, DATA NEEDS TO BE FIRST INSERTED INTO THE PRIMARY TABLE FIRST,THEN ONLY TO THE CHILD TABLE.

--WHILE CREATING TABLE
--AFTER CREATING TABLE

/*CREATE FOREIGN KEY FOR EXISTING TABLE*/

ALTER TABLE TABLENAME
ADD CONSTRAINT CONSTRAINT_NAME FOREIGN KEY(FOREIGN_KEY_COLUMN)REFERENCES REFERENCE_TABLE(REFERENCE_COLUMN FROM REFERENCE_TABLE)

ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_DEPARTMENTID FOREIGN KEY(DEPARTMENTID)
REFERENCES DEPARTMENT(DEPTID)

ALTER TABLE EMPLOYEE DROP CONSTRANINT FK_EMPLOYEE_DEPARTMENTID

ALTER TABLE TABLENAME
ADD CONSTRAINT CONSTRAINT_NAME ..........COMMON SYNTAX FOR ALL TYPE OF CONSTRAINTS

PRIMARY KEY(COLUMN_NAME)
UNIQUE(COLUMN_NAME)
DEFAULT(VALUE)FOR(COLUMN_NAME)
CHECK(COLUMN=VALUES)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*CREATE FOREIGN KEY CONSTRAINT FOR ALREADY EXISTING TABLE*/

DROP TABLE IF EXISTS EMPLOYEE
CREATE TABLE EMPLOYEE
(
EMPID INT,
FNAME VARCHAR(10),
LNAME VARCHAR(10),
AGE INT,
DEPARTMENTID INT
)

DROP TABLE IF EXISTS DEPARTMENT
CREATE TABLE DEPARTMENT
(
DEPID INT PRIMARY KEY,
DEPNAME VARCHAR(20),
LOCATION VARCHAR(20)
)

ALTER TABLE TABLE_NAME
ADD CONSTRAINT CONSTRAINT_NAME FOREIGN KEY(FOREIGN_KEY_COLUMN)
REFERENCES REFERENCE_TABLE(REFERENCE_COLUMN FROM REFERENCE_TABLE)

ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_DEPARTMENTIDS FOREIGN KEY(DEPARTMENTID)
REFERENCES DEPARTMENT(DEPID)

ALTER TABLE EMPLOYEE DROP CONSTRAINT FK_EMPLOYEE_DEPARTMENTIDS

INSERT INTO DEPARTMENT VALUES
--(4,'HUMAN RESOURCE','NEW YORK')
(1,'MARKETING','MUMBAI'),
(2,'SALES','DELHI'),
(3,'IT-SOFTWARE','NEW YORK')

INSERT INTO EMPLOYEE VALUES
(5,'RAJ','WANKAR',33,4)--The INSERT statement conflicted with the FOREIGN KEY constraint "FK_EMPLOYEE_DEPARTMENTID". The conflict occurred in database "Zorba_1024", table "dbo.DEPARTMENT", column 'DEPID'.

(4,'JYOTI','KHANNA',33,2)
(1,'TOM','JERRY',33,2),
(2,'SHIV','SHARMA',30,1),
(3,'PRAVIN','SHARMA',45,3)

UPDATE EMPLOYEE SET DEPARTMENTID=3 WHERE EMPID=2
DELETE FROM EMPLOYEE WHERE DEPARTMENTID=3
DELETE FROM DEPARTMENT WHERE DEPID=3
DELETE FROM DEPARTMENT WHERE DEPID=2
--The DELETE statement conflicted with the REFERENCE constraint "FK_EMPLOYEE_DEPARTMENTID". The conflict occurred in database "Zorba_1024", table "dbo.EMPLOYEE", column 'DEPARTMENTID'.

DROP TABLE DEPARTMENT
--Could not drop object 'DEPARTMENT' because it is referenced by a FOREIGN KEY constraint.


