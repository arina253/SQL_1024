--DML (DATA MANIPULATION LANGUAGE) --INSERT - FOR INSERTING DATA INTO ROWS OF A TABLECREATE TABLE Dept (DeptNo INT NOT NULL,DeptName VARCHAR(14),Location VARCHAR(13))--SYNTAX FOR INSERTINSERT INTO TABLE_NAME (col1, col2, col3,.... col N)
VALUES (value1, value2, value3, .... valueN); 

INSERT INTO TABLE_NAME 
VALUES (value1, value2, value3, .... valueN);

INSERT INTO TABLE_NAME (col1)
VALUES (value1)

-- Above insert syntax --> only when all values will be provided--VALUES:VARCHAR WE MUST INCLUDE IN SINGLE QUOTES >> ''INSERT INTO DBO.DEPT (DEPTNO,DEPTNAME,LOCATION)VALUES (2,'MARKETING','MUMBAI'),(3,'FINANCE','NEW YORK')SELECT *FROM DEPTINSERT INTO DBO.DEPT (DEPTNO,DEPTNAME,LOCATION)VALUES (4,'MIT','DELHI'),(5,'FINANCE')INSERT INTO DBO.DEPT (DEPTNO,DEPTNAME,LOCATION)VALUES (6,'MIT','DELHI'),(7,'FINANCE','LONDON')INSERT INTO DBO.DEPTVALUES(7,'DELHI')--Column name or number of supplied values does not match table definition.INSERT INTO DBO.DEPTVALUES(8,'DELHI','ACCOUNTS')INSERT INTO DBO.DEPTVALUES(9,10,'ACCOUNTS')--Conversion failed when converting the varchar value 'DELHI' to data type int.INSERT INTO DBO.DEPTVALUES('DELHI',9,'ACCOUNTS')-- WE CAN INSERT INT VALUE TO VARCHAR COLUMN-- WE CANNOT INSERT VARCHAR TO INT COLUMN.-- We can provide column name in any sequence--SCHEMA IS A GROUP OF DATABASE OBJECT.--SCHEMA IS A LOGICAL STRUCTURE --BY DEFAULT, WE GET dbo schemaCREATE SCHEMA HRCREATE TABLE HR.Dept (DeptNo INT NOT NULL,DeptName VARCHAR(14),Location VARCHAR(13))SELECT *FROM HR.DEPTDATABASE_NAME SCHEMA_NAME TABLE_NAME----------------------------------------------------------------------------NO MENTION IN TABLE COLUMN ----- NULL COLUMNIF WE MENTION NOT NULL, WE MUST SUPPLY THE VALUE.---------------------------------------------------------------------------------------------UPDATE--TO MODIFY/UPDATE DATA/ VALUES IN A TABLEUPDATE TABLE_NAMESET [COLUMN_NAME1 = VALUE1,....COLUMN_NAMEN = VALUEN]COL3 = VAL[WHERE CONDITION] -- OPTIONALUPDATE DBO.DEPTSET DEPTNAME = 'SALES'WHERE DEPTNO = 7SELECT *FROM DEPT--WE CANNOT UPDATE MULTIPLE VALUES IN MULTIPLE ROWS.--WE CAN UPDATE MULTIPLE ROWS--WE CAN UPDATE MULTIPLE COLUMNS FOR SELECTED ROWS--ONE COLUMN SHOULD BE USED IN SET OPERATORUPDATE DBO.DEPTSET DEPTNAME = 'SALES'WHERE DEPTNAME = 'ACCOUNTS'UPDATE DBO.DEPTSET DEPTNAME = 'SALES'WHERE DEPTNAME = 'SALES' AND LOCATION = 'LONDON'UPDATE DBO.DEPTSET DEPTNAME = 'SALES'WHERE DEPTNAME = 'SALES' OR LOCATION = 'LONDON'UPDATE DBO.DEPTSET DEPTNAME = 'HR',LOCATION = 'LONDON'--MODIFY WILL NOT WORK IN SQL SERVER.IT WILL WORK IN MYSQL.--RENAME WILL NOT WORK IN MSSQL.sp_rename to rename database object.--AND IS A ROW LEVEL/CONDITIONAL OPERATOR--FOR PERFECT MATCH , WE USE AND - SHOULD MATCH ALL CONDITION--OR - SHOULD MATCH ANY ONE OF THE CONDITION.UPDATE DBO.DEPTSET LOCATION = 'TEXAS'--WE CANNOT UNDO TRANSACTIONS/UPDATE--WE CANNOT SUPPLY VALUE TO THE IDENTITY COLUMN. IDENTITY COLUMN IS AUTO-INCREMENTED.------------------------------------------------------------------------------------------DELETEUsing ALTER, we are adding column,removing column, changing datatypeDELETE used to remove data/row from a table.SELECT *FROM DBO.DEPTDELETE FROM TABLE_NAME WHERE CONDITION ----- DELETE DATA FROM A TABLE WITH FILTER (PARTICULAR ROWS)DELETE FROM TABLE_NAME ------DELETE DATA FROM ENTIRE TABLE OR DELETE ALL DATA FROM TABLESELECT *FROM DBO.DEPTDELETE FROM DBO.DEPTDELETE FROM DBO.DEPT WHERE DEPTNAME = 'HR'DELETE FROM DBO.DEPT WHERE DEPTNO > 4DELETE FROM DBO.DEPT WHERE DEPTNO != 4-----> (!= OR <>)/*    */ COMMENTING MULTIPLE LINESMAKE A HABIT TO COMMENT DELETE AND UPDATE.