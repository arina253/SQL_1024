--TABLE VARIABLES IN SQL SERVER

A DB OBJECT.
A SPECIAL TYPE OF LOCAL VARIABLE THAT HELPS TO STORE DATA TEMPORARILY
@VARIABLE_NAME
WE CAN SAVE ENTIRE TABLE DATA INTO A TABLE VARIABLE
REVERSING TRANSACTION,ALTER CANNOT BE DONE IN TABLE VARIABLE.

DECLARLE @TABLE_VARIABLE ----- LOCAL VARIABLE
IN TABLE VARIABLE WE CANNOT USE SELECT INTO BECAUSE 

DECLARE @TABLE_VARIABLE
INSERT INTO @ SELECT FROM TABLE

--LOCAL VARIABLE
DECLARE @YEAR INT
SET @YEAR =2024
SELECT @YEAR

SYNTAX
DECLARE @LOCAL_TABLEVARIABLE AS TABLE
(
COLUMN_1 DATATYPE,
COLUMN_2 DATATYPE,
COLUMN_N DATATYPE
)

--TABLE VARIABLE CAN BE USED TO STORE DATA OF A ENTIRE TABLE

DECLARE @WEEKDAYS AS TABLE 
(
DAYNUM INT PRIMARY KEY,
WEEKDAY VARCHAR(10)
)--THIS IS NOT ALIAS NAME

INSERT INTO @WEEKDAYS VALUES
(1,'MONDAY'),
(2,'TUESDAY'),
(3,'WEDNESDAY'),
(4,'THURSDAY'),
(5,'FRIDAY'),
(6,'SATURDAY'),
(7,'SUNDAY')

SELECT *FROM @WEEKDAYS

DECALRE,SELECT,INSERT SHOULD NE USED IN A SAME BATCH OF CODE.

WE CANNOT STORE MULTIPLE ROWS IN TEMP VARIABLE
ALL TYPES OF DATA CAN BE STORED IN A TABLE VARIABLE.
SIMILAR TO TEMP TABLE IN RESPECT TO STORING DATA ONLY.

MOSTLY TEMP TABLES ARE USED THAN TABLE VARIABLES.
MAIN ADVANTAGE IS INDEX.INDEXES ARE IMPORTANT FROM PERFORMANCE POINT OF VIEW. 
IN TABLE VARIABLE, WE CAN HAVE ONLY CLUSTERED INDEX AS WE HAVE PRIMARY COLUMN IN TABLE VARIABLE.
WE CANNOT USE ALTER COMMANDS TO ADD COLUMN/CHANGING DATATYPE  IN TABLE VARIABLE BECAUSE SEPARATE STATEMENT CANNOT BE RUN
WE CANNOT CREATE NON CLUSTERED INDEX ON TABLE VARIABLE. SO INCASE OF HUGE DATA, WE SHOULD ALWAYS GO WITH TEMP TABLE.

WE CANNOT DO ANY MODIFICATION IN STRUCTURE OF TABLE VARIABLE

MORE ROWS----TEMP TABLE
LESS DATA ---- TABLE VARIABLE SINCE CLUSTERED INDEX ONLY

BOTH ARE USED TO STORE DATA TEMPORARILY.
BASIS OF SELECTION IS VOLUME OF DATA

DATABASE OBJECTS TO STORE DATA TEMPORARILY
TEMP TABLE
TABLE VARIABLE
CTE - COMMON TABLE EXPRESSION

--SELECT *FROM SALES.SALESORDERDETAIL
CREATE PROC DBO.USP_GETSALESORDERDETAIL1
(
@PRODUCTID INT
)
AS
BEGIN
DECLARE @SALESORDERDETAIL AS TABLE(
SALESORDERID INT,
SALESORDERDETAILID INT,
CARRIERTRACKINGNUMBER VARCHAR(255),
ORDERQTY INT,
UNITPRICE MONEY,
LINETOTAL MONEY
)

INSERT INTO @SALESORDERDETAIL
SELECT SALESORDERID,SALESORDERDETAILID,CARRIERTRACKINGNUMBER,ORDERQTY,UNITPRICE,LINETOTAL
FROM SALES.SALESORDERDETAIL
WHERE PRODUCTID = 774
AND CARRIERTRACKINGNUMBER IS NOT NULL

SELECT *FROM SALESORDERDETAIL


END

EXEC DBO.USP_GETSALESORDERDETAIL1 771

--A STORED PROCEDURE CAN BE CALLED WITHIN THE STORED PROCEDURE

TABLE VARIABLE RUNS FASTER, IS NOT STORED IN DATABASE.

WE CANNOT INSERT DATA INTO TABLE VARIABLES USING SELECT INTO INSERT COMMAND

--THE IF ELSE STATEMENT
CONDITIONAL STATEMENTS 
BASED ON TRUE OR FALSE, WE ARE GOING TO EXECUTE CODE
 IF 10=10
 QUERY
 ELSE
 QUERY
 IF CONDITION WILL EVALUATE EXPRESSION.
 IF TRUE THE QUERY IMMEDIATELY BELOW IF PART WILL EXECUTE
 IF FALSE ELSE PART WILL EXECUTE.
 IF NO ELSE QUERY WILL STOP IN IF PART.
 INSIDE IF ELSE WE WRITE BEGIN END