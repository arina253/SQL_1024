--THE SQL SELECT INTO STATEMENT
COPIES DATA FROM ONE TABLE INTO A NEW TABLE.
TABLE WILL BE CREATED AUTOMATICALLY

--COPY ALL COLUMNS INTO A NEW TABLE:
SELECT *
INTO NEWTABLE [IN EXTERNALDB]
FROM OLDTABLE
WHERE CONDITION;

--NEW TABLE WILL BE CREATED IN THE DATABASE PERMANENTLY.
-- WHERE CONDITION IS FILTERING ROWS


SELECT *FROM [DBO].[CUSTOMERS]

/*CREATE A NEW TABLE AND COPY DATA FROM OLD TABLE*/
--TO CREATE EXACT REPLICA OF THIS TABLE
SELECT *INTO DBO.CUSTOMERCOPY
FROM DBO.CUSTOMERS

SELECT *FROM CUSTOMERS
SELECT *FROM CUSTOMERCOPY

/*COPY WITH WHERE CONDITION*/
SELECT *INTO DBO.CUSTOMERCOPY1
FROM DBO.CUSTOMERS
WHERE STATE IN ('IN','KY','NY')

SELECT *FROM DBO.CUSTOMERCOPY1

--AN EMPTY TABLE WITHOUT DATA WITH SELECT INTO 
SELECT *INTO DBO.CUSTOMERCOPY2
FROM DBO.CUSTOMERS
WHERE STATE IN ('') ...1=0

SELECT *INTO DBO.CUSTOMERCOPY3
FROM DBO.CUSTOMERS
WHERE 1=0

SELECT *FROM DBO.CUSTOMERCOPY2
--ONLY COPIED THE TABLE STRUCTURE AS EXISTING TABLE WHERE WE HAVE TO GIVE WHERE CONDITION WHICH IS NEVER SATISFIED OR 1=0

SELECT *FROM DBO.CUSTOMERCOPY3

--WE CAN CREATE REPLICA OF EXISING TABLE USING 1=0 CONDITION

--WILL CREATE COPY OF COLUMN NAME AND DATATYPE ONLY.

--CREATE TABLE IN OTHER DATABASE

--1=0 ...........CREATE REPLICA OF TABLE
--1=1 ............CREATE TABLE AND DATA 

--CREATE TABLE INTO ANOTHER DATABASE
SELECT *INTO DATABASE_NAME.SCHEMA_NAME.TABLE_NAME
FROM SCHEMA_NAME.TABLE_NAME


--CREATE TABLE INTO NEW DATABASE
SELECT *INTO ZORBA_1025.DBO.CUSTOMERCOPY5
FROM DBO.CUSTOMERS

--COPY THE DATA FROM ANOTHER DATABASE
SELECT *INTO ZORBA_1025.DBO.CUSTOMERCOPY5
FROM DBO.CUSTOMERS

SELECT *INTO DBO.EMPLOYEECOPY
FROM [ADVENTUREWORKS2022].HumanResources.Employee

select *from dbo.employeecopy


--COPY ONLY SOME COLUMNS INTO A NEW TABLE
SELECT COLUMN1,COLUMN2,COLUMN3,.....
INTO NEWTABLE [IN EXTERNALDB]
FROM OLDTABLE
WHERE CONDITION

SELECT *FROM DBO.CUSTOMERS

SELECT CUSTOMERID,FIRSTNAME,LASTNAME,CITY INTO DBO.CUSTOMERCOPY8
FROM DBO.CUSTOMERS
-- WRITE SELECT INTO TABLE NAME FROM TABLE FIRST THEN COLUMN NAME WILL COME AUTOMATICALLY.

SELECT *FROM DBO.CUSTOMERCOPY8

--TO GROUP THE RESULT SET BY CITY
SELECT CITY FROM DBO.CUSTOMERS
GROUP BY CITY
--

SELECT DISTINCT CITY INTO NEWTABLE
FROM DBO.CUSTOMERS

--SELECT *INTO COMMAND IS USED FOR TEMPORARY TABLE

/*SCENARIO: BANKING DATA -----LAKHS OF RECORD IN TRANSACTION TABLE ------ DO SOME MANIPULATION IN 1000 ROWS AND WE HAVE MULTIPLE UPDATES TO DO IN INTERVALS ,EXTRACTING IN EXCEL AND ANOTHER UPDATE. INSERT ,UPDATE AND EXTRACT TO DO IN STORED PROCEDURE
UPDATE 100000 ----1000-----PROCESS WILL BE LOW
SELECT ONLY THOSE DATA IN TEMPORARY TABLE FROM MAIN TABLE WITH WHERE CONDITION SO THAT TEMPORARY TABLE WILL HAVE 1000 ROWS ONLY TO PROCESS.
ANOTHER UPDATE ALSO IN SAME TEMP TABLE
FINAL DATA WILL BE IN THE TEMP TABLE AND JOIN WITH MAIN TABLE SO THAT WE HAVE UPDATED DATA IN MAIN TABLE.
--WE ARE NOT HITTING MAIN TABLE MULTIPLE TIMES

-- WE USE SELECT INTO CLAUSE TO TAKE ONLY THE REQUIRED DATA BASED ON WHERE CONDITION AND USED FOR STORED PROCEDURE


--TO COPY DATA FROM ONE TABLE TO OTHER
1.SELECT INTO
2.CREATE TABLE AND INSERT DATA

--THE SQL INSERT INTO SELECT STATEMENT

--COPIES DATA FROM ONE TABLE AND INSERTS IT INTO ANOTHER
--REQUIRES THAT DATA TYPES IN SOURCE AND TARGET TABLES MATCH.
--IN INSERT INTO SELECT STATEMENT, WE SHOULD HAVE TABLE ALREADY CREATED TO INSERT DATA.


--INSERT INTO SELECT SYNTAX
--COPY ALL COLUMNS FROM ONE TABLE TO ANOTHER TABLE:*/
INSERT INTO TABLE2
SELECT *FROM TABLE1

INSERT INTO DBO.CUSTOMERCOPY8
SELECT *FROM DBO.CUSTOMERS

SELECT *FROM DBO.CUSTOMERCOPY8

--COPY ONLY SOME COLUMNS FROM ONE TABLE TO ANOTHER TABLE
INSERT INTO COLUMN1,COLUMN2,COLUMN3,.....
SELECT COLUMN1,COLUMN2,COLUMN3,....
FROM TABLE1
WHERE CONDITION;

INSERT INTO DBO.CUSTOMERCOPY8 (CUSTOMERID,FIRSTNAME,LASTNAME,CITY)
SELECT CUSTOMERID,FIRSTNAME,LASTNAME,CITY FROM DBO.CUSTOMERS
WHERE CITY = ' '

SELECT *FROM DBO.CUSTOMERCOPY8
TRUNCATE TABLE DBO.CUSTOMERCOPY8

--ALTER TABLE DBO.CUSTOMERCOPY4 ALTER COLUMN EMAIL VARCHAR(100)NOT NULL

INSERT INTO DBO.CUSTOMERCOPY8(FIRSTNAME,LASTNAME,CITY)
SELECT FIRSTNAME,LASTNAME,CITY FROM DBO.CUSTOMERS
--WILL HAVE NULL VALUES IN OTHER COLUMNS)

INSERT INTO DBO.CUSTOMERCOPY8(CUSTOMERID,FIRSTNAME,LASTNAME,CITY,EMAIL)
SELECT CUSTOMERID,FIRSTNAME,LASTNAME,CITY,'' FROM DBO.CUSTOMERS
