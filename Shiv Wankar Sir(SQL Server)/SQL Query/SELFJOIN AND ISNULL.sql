--SELF JOIN

--ALLOWS US TO JOIN A TABLE TO ITSELF.
-- HELPS TO COMPARE ROWS WITHIN THE SAME TABLE
--USES THE INNER JOIN OR LEFT JOIN CLAUSE.
--TABLE ALIAS IS USED TO ASSIGN 

--SYNTAX
SELECT SELECT_LIST FROM T T1
[INNER |LEFT] JOIN T T2
ON JOIN_PREDICATE;--(T1.COL = T2.COL)

CREATE TABLE [dbo].[EmployeeDetails]
(
[Emp_id] [bigint] IDENTITY(1,1) PRIMARY KEY,
[Emp_name] [nvarchar](200) NULL, 
[Mgr_id] [bigint] NULL 
)
SELECT * FROM [EmployeeDetails]
Insert into [EmployeeDetails] (Emp_name,[Mgr_id]) values
 ('Rakesh', NULL)
,('Namam', 1)
,('Sanket', 2)
,('Vishal', 3)
,('Ram', 1)
,('Karan', 2)
,('Suhas', 3)

SELECT *FROM DBO.EMPLOYEEDETAILS

SELECT E.EMP_NAME AS EMPLOYEENAME,M.EMP_NAME AS MANAGERNAME
FROM EMPLOYEEDETAILS E
JOIN EMPLOYEEDETAILS M
ON E.MGR_ID = M.EMP_ID
--NULL VALUES WILL BE ELIMINATED IN INNER JOIN.

SELECT E.EMP_NAME AS EMPLOYEENAME,M.EMP_NAME AS MANAGERNAME
FROM EMPLOYEEDETAILS E
 LEFT JOIN EMPLOYEEDETAILS M
ON E.EMP_ID = M.EMP_ID

SELECT E.EMP_NAME AS EMPLOYEENAME,M.EMP_NAME AS MANAGERNAME
FROM EMPLOYEEDETAILS E
 LEFT JOIN EMPLOYEEDETAILS M
ON M.EMP_ID = E.EMP_ID
--WE GOT NULL VALUES AS WELL FROM TABLE WHEN WE USE LEFT JOIN.

--TO REPLACE NULL VALUES IN A TABLE

--ISNULL ----> ISNULL IS USED TO CHECK IF THE VALUE IS NULL AND IF IT IS NULL WE CAN PROVIDE SOME VALUE TO REPLACE NULL.
--SYNTAX:
SELECT EMP_ID,EMP_NAME,ISNULL(MGR_ID,1) FROM DBO.EMPLOYEEDETAILS
--WILL CHECK MGR_ID COLUMN AND REPLACE THE VALUE WHEN IT IS NULL. 
--ISNULL FOR DISPLAY PURPOSE ONLY

SELECT E.EMP_NAME AS EMPLOYEENAME,ISNULL(M.EMP_NAME,'SUPERBOSS') AS MANAGERNAME
FROM EMPLOYEEDETAILS E
 LEFT JOIN EMPLOYEEDETAILS M
ON M.EMP_ID = E.EMP_ID

--TO SUPPORT FILE/DATA---IF WE DON'T WANT VALUE WILL DO REPLACEMENT AS BLANK SO THE NULL WILL BE ELIMINATED.
--USED TO REPLACE NULL VALUES WITH SOME DEFAULT VALUES

CREATE TABLE DBO.EMP
(EID INT PRIMARY KEY,
ENAME VARCHAR(20),
PRIM_MOB VARCHAR(10),
SEC_MOB VARCHAR(10)
)

INSERT INTO DBO.EMP
(1,'RAKESH',98765433',NULL)
(2,'NAMAN',NULL,'987654321')

----GIVING THE COLUMN NAME ITSELF TO NULL VALUES
SELECT EID,ENAME,ISNULL(PRIM_MOB,SEC_MOB)AS MOB_NUM FROM DBO.EMP
SELECT EID,ENAME,PRIM_MON,SEC_MOB, ISNULL (PRIM_MOB,SEC_MOB)AS MOB_NUM FROM DBO.EMP

SELECT *FROM DBO.EMP
UPDATE DBO.EMP SET SEC_MOB = NULL WHERE EID = 4

SELECT EID,ENAME,COALESCE 

ALTER TABLE DBO.EMP ADD THIRD_OFFICEPHONE VARCHAR(10)
UPDATE DBO.EMP SET OFFICEPHONE = '12-233445556' WHERE EID = 4 = NULL WHERE EID = 4

SELECT EID,ENAME,PRIM_MOB,SEC_MOB,OFFICEPHONE,COALESCE(PRIM_MOB,SEC_MOB,OFFICEPHONE,'99999999' )AS MOB_NUM FROM DBO.EMP
IN COALESCE FUNCTION WE HAVE TO PASS ALL THE COLUMN & DISPLAY FIRST NOT NULL VALUE


IN COALESCE WE CAN HAVE MULTIPLE OPTIONS/COLUMNS TO VIEW NOT NULL VALUES
IN ISNULL WE HAVE TWO PARAMETERS - EXPRESSION AND REPLACEMENT VALUE.USED FOR ONE COLUMN
EG: EMAIL, HOME PHONE,OFFICE PHONE

SELECT *FROM DBO.EMPLOYEEDETAILS
--ISNULL CAN BE USED IN WHERE CLAUSE OR SELECT CLAUSE , GROUP BY CLAUSE

SELECT E.EMP_NAME AS EMPLOYEENAME,M.EMP_NAME AS MANAGERNAME
FROM EMPLOYEEDETAILS E
JOIN EMPLOYEEDETAILS M
ON ISNULL(E.MGR_ID,1) = M.EMP_ID

UPDATE DBO.EMPLOYEE SET OFFICEPHONE = COALESCE(PRIM_MOB,SEC_MOB) WHERE EID =5
 
 SELECT COALESCE (NULL,NULL,NULL,NULL)
 --At least one of the arguments to COALESCE must be an expression that is not the NULL constant.

 
 SELECT COALESCE (NULL,NULL,NULL,NULL,1)

 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 --SIR CLASS NOTES

 CREATE TABLE [dbo].[EmployeeDetails]
(
[Emp_id] [bigint] IDENTITY(1,1) PRIMARY KEY,
[Emp_name] [nvarchar](200) NULL, 
[Mgr_id] [bigint] NULL 
)
SELECT * FROM [EmployeeDetails]
Insert into [EmployeeDetails] (Emp_name,[Mgr_id]) values
 ('Rakesh', NULL)
,('Namam', 1)
,('Sanket', 2)
,('Vishal', 3)
,('Ram', 1)
,('Karan', 2)
,('Suhas', 3)

SELECT select_list FROM T t1
[INNER | LEFT] JOIN T t2 
ON join_predicate; --(t1.col = t2.col)

SELECT * FROM dbo.EmployeeDetails

SELECT E.Emp_name AS EmployeeName, ISNULL(M.Emp_name,'SuperBoss') AS ManagerName
FROM EmployeeDetails E
INNER JOIN EmployeeDetails M
--ON E.Mgr_id = M.Emp_id
ON ISNULL(E.Mgr_id,1) = M.Emp_id

-- ISNULL --> ISNULL IS USED TO CHECK IF THE IS NULL AND IF IT IS NULL WE CAN PROVIDE SOME VALUE TO REPLACE NULL

-- SUPPORT FILE/DATA FORMAT-- IF WE DONT WANT VALUE WILL REPLACEMENT AS BLANK SO THE NULL WILL BE ELIMINATED
-- USED TO REPLACE NULL VALUES WITH SOME DEFAULT VALUES

SELECT Emp_id,Emp_name,ISNULL(Mgr_id,1) AS Mgr_id FROM dbo.EmployeeDetails


CREATE TABLE dbo.EMP
(EId INT PRIMARY KEY,
EName VARCHAR(20),
PRIM_MOB VARCHAR(10),
SEC_MOB VARCHAR(10))

INSERT INTO  dbo.EMP VALUES
 (1,'Rakesh','9672399429',NULL )
,(2,'Namam',NULL,'9922994411')
,(3,'Sanket','9552231000',NULL )
,(4,'Vishal', NULL,'4212234552')
,(5,'Ram', NULL,'4212234552')
,(6,'Karan', '7344522266',NULL )
,(7,'Suhas', '7548887622',NULL )

SELECT EId,EName, PRIM_MOB AS Mob_Num FROM dbo.EMP
SELECT EId,EName,PRIM_MOB,SEC_MOB,ISNULL(PRIM_MOB,SEC_MOB) AS Mob_Num FROM dbo.EMP

SELECT * FROM dbo.EMP
UPDATE dbo.EMP SET SEC_MOB = NULL WHERE EId = 4

ALTER TABLE dbo.EMP ADD OfficePhone VARCHAR(10)

UPDATE dbo.EMP SET OfficePhone = '12-3310002' WHERE EId = 4
UPDATE dbo.EMP SET PRIM_MOB = NULL WHERE EId = 7
UPDATE dbo.EMP SET SEC_MOB = '4445226662' WHERE EId = 6
UPDATE dbo.EMP SET OfficePhone = COALESCE(PRIM_MOB,SEC_MOB) WHERE EId = 5

SELECT EId,EName,PRIM_MOB,SEC_MOB,OfficePhone,COALESCE(PRIM_MOB,SEC_MOB,OfficePhone) AS Mob_Num FROM dbo.EMP

SELECT EId,EName,PRIM_MOB,SEC_MOB,OfficePhone,COALESCE(PRIM_MOB,SEC_MOB,OfficePhone) AS Mob_Num FROM dbo.EMP