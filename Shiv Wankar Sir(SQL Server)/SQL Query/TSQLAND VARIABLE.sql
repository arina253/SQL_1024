--T-SQL:
TRANSACT-SQL
RELATED TO MICROSOFT SQL SERVER
WITHOUT T IF WE CONSIDER SQL ,THAT IS FREE TO USE BY ANY COMPANY,OPEN SOURCE LANGUAGE
SYNTAX ARE USED IN MICROSOFT SQL SERVER ONLY.
HAVE MULTIPLE BLOCKS OF CODE AND RN TOGETHER TO PERFORM CERTAIN TRANSACTION.
FOR ORACLE -PLSQL
WHENEVER WE ARE PERFORMING TRANSACTION,THAT BLOCK OF CODE IS CALLED T-SQL.
JUST SQL BUT WITH ADDED FUNCTIONALITY.

DIFFERENCE BETWEEN SQL AND TSQL
1)SQL -A QUERY LANGUAGE FOR MANIPULATING DATA STORED IN A DATABASE.
TSQL IS AN EXTENSION OF SQL PRIMARILY USED IN MSSQL SERVER DATABASES AND SOFTWARE.
2)SQL-OPEN SOURCE
3)SQL STATEMENS ARE EXECUTED ONE AT A TIME- NON PROCEDURAL
T-SQL -CODES ARE PROCESSED IN BLOCKS AND IN PROCEDURAL MANNER IN STRUCTURED AND LOGICAL WAY.
4) TOP AND DISTINCT ,ISNULL,COALESCE PART OF T SQL.
T-SQL OFFERS FUNCTIONALITY THAT DOES NOT APPEAR IN REGULAR SQL.

TSQL IS A COMBINATION OF SQL COMMAND RUNNING TOGETHER TO PERFORM TASK
TSQL IS A FUNCTIONALITY WITHIN THE SQL SERVER ENVIRONMENT WHERE WE WILL BE HAVING A BLOCK OF CODE RUN TOGETHER TO PERFORM CERTAIN ACTION/RUN SOFTWARE

-----------------------------------------------------------------------------------------------------------------------------------------------------------

VARIABLE
AN OBJECT THAT HOLDS A SINGLE VALUE OF A SPECIFIC DATA TYPE
EG: INTEGER,DATE OR VARYING CHARACTER STRING

ADVANTAGE:
WE CAN CONFIGURE THE VARIABLE MULTIPLE TIMES.
IF THERE IS A CHANGE IN VARIABLE VALUE,
AS A LOOP COUNTER TO COUNT THE NUMBER OF TIMES A LOOP IS PERFORMED.
TO HOLD A VALUE TO BE TESTED BY A CONTROL FLOW STATEMENT 
TO STORE THE VALUE RETURNED BY A STORED PROCEDURE OR FUNCTION

TSQL HELPS TO ACHIEVE OUR GOAL IN A STRUCTURED WAY.

--DECLARING A VARIABLE......ALWAYS HAVE TO USE @ BEFORE VARIABLE NAME

DECLARE @MODEL_YEAR AS SMALLINT;

--ASSIGNING VALUE TO A VARIABLE
--EQUALS TO SIGN
--SET COMMAND

DECLARE @COUNT INT = 10
PRINT @COUNT
SELECT @COUNT

DECLARE @NAME NVARCHAR(50)
SET @NAME ='ARINA'

--USING VARIABLES 

DECLARE @SAL INT = 5000


SELECT 
ID,
NAME,
GENDER,
SALARY
FROM DBO.EMPLOYEE 
WHERE SALARY  > 5000
--WHERE SALARY  > @SAL

VARIABLES WILL REMOVE THE NEED TO PROVIDE HARD CODED VALUE

--VARIABLE IS A TEMPORARY OBJECT.
SO WE SHOULD RUN TOGETHER DECLARE AND SELECT STATEMENT TO SEE WHAT VALUE THE VARIABLE IS HOLDING.
WE CANNOT SEE VARIABLE VALUE WITHOUT DECLARING AND IN A DIFFERENT WINDOW.NEED TO RUN WITH THE VALUE OF VARIABLE.

DECLARE @ID INT =11
DECLARE @NAME VARCHAR(10)='MAX'

DECLARE @ID INT =11,
@NAME VARCHAR(10)='MAX'

IF EXISTS (SELECT 1 FROM DBO.EMPLOYEE WHERE ID = @ID)
BEGIN
	UPDATE DBO.EMPLOYEE
		SET NAME = @NAME
	WHERE ID =@ID
END
ELSE
BEGIN
	INSERT INTO DBO.EMPLOYEE
	(
	ID,
	NAME
	)
	VALUES
	(
	@ID,
	@NAME
	)
END

WHENEVER THERE IS ANY ERROR, IT WILL STOP EXECUTION.
ADDITION OF GO WILL MAKE TWO SEPARATE BLOCK 
GO GIVES INSTRUCTION TO SQL ENGINE TO GO TO THE NEXT BLOCK EVEN IF THE ERROR OCCURS IN THE FIRST BLOCK.

BLUE COLOR  -SQL KEYWORDS USED IN MULTIPLE PLATFORM
PINK COLOR- RELATED TO SQL SERVER /TSQL ONLY
RED COLOR- VALUES

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--CLASS WORK

DROP TABLE EMPLOYEES
Create Table Employees 
( Id int primary key identity, 
[Name] nvarchar(50), 
Email nvarchar(50), 
Department nvarchar(50)
) 


Declare @counter int = 1 
While(@counter <= 100) 
Begin 
 Declare @Name nvarchar(50) = 'ABC'  + RTRIM(@counter) 
 Declare @Email nvarchar(50) = 'abc' + RTRIM(@counter) + '@pragimtech.com' 
 Declare @Dept nvarchar(10) = 'Dept ' + RTRIM(@counter) 
 --Insert into Employees values (@Name, @Email, @Dept) 
 PRINT @Name
 Set @counter = @counter +1 
 If(@Counter%10 = 0) 
 Print RTRIM(@Counter) + ' rows inserted' 
End

SELECT * FROM dbo.Employee WHERE ID = 10

DECLARE @ID INT = 10,
@NAME VARCHAR(10) = 'Pat'

IF EXISTS (SELECT 1 FROM dbo.Employee WHERE ID = @ID)
BEGIN
 UPDATE dbo.Employee
  SET Name = @NAME
 WHERE ID = @ID
END
ELSE
BEGIN
 INSERT INTO dbo.Employee
 (
  ID,
  Name
 )
 VALUES
 (
  @ID,
  @NAME
 )
END

SELECT * FROM dbo.Employee WHERE ID = 10
