-- TABLE FOR AGGREGATE FUNCTION AND GROUP BY

CREATE TABLE PRODUCT_MAST
(
PRODUCTMASTERID INT PRIMARY KEY IDENTITY,
PRODUCT VARCHAR(15),
COMPANY VARCHAR (15),
QUANTITY INT,
RATE INT,
COST INT
)

INSERT INTO PRODUCT_MAST VALUES 
('ITEM1','COM1',2,10,20),
('ITEM2','COM2',3,25,75),
('ITEM3','COM1',2,30,60),
('ITEM4','COM3',5,10,50),
('ITEM5','COM2',2,20,40),
('ITEM6','CPM1',3,25,75),
('ITEM7','COM1',5,30,150),
('ITEM8','COM1',3,10,30),
('ITEM9','COM2',2,25,50),
('ITEM10','COM3',4,30,120)

SELECT *FROM PRODUCT_MAST

SELECT COUNT(*)FROM PRODUCT_MAST			--10

SELECT COUNT(*)FROM PRODUCT_MAST WHERE RATE>=20  --7

SELECT COUNT(DISTINCT COMPANY)FROM PRODUCT_MAST  --4

SELECT COMPANY,COUNT(*)FROM PRODUCT_MAST GROUP BY COMPANY

SELECT COMPANY,COUNT(*)FROM PRODUCT_MAST GROUP BY COMPANY HAVING COUNT(*)>2

----------------------------------------------------------------------------------------------------------------------------------------

SELECT SUM (COST)FROM PRODUCT_MAST   --670

SELECT SUM(COST)FROM PRODUCT_MAST WHERE QUANTITY>3    --320

SELECT  COMPANY,SUM(COST)FROM PRODUCT_MAST WHERE QUANTITY > 3 GROUP BY COMPANY

SELECT COMPANY,SUM(COST)FROM PRODUCT_MAST GROUP BY COMPANY HAVING SUM(COST) >=170

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT AVG(COST)FROM PRODUCT_MAST  --67

SELECT MAX(RATE)FROM PRODUCT_MAST  --30

SELECT MIN(RATE)FROM PRODUCT_MAST  --10

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--TABLE FOR EXERCISE WITH SAMPLE DATA TABLENAME-EMPSALARY

CREATE TABLE EMPSALARY
(
EMPLOYEENUMBER INT,
LASTNAME VARCHAR(25),
LEVEL INT,
ANNUAL_SALARY INT,
DEPARTMENT VARCHAR(35)
)

INSERT INTO EMPSALARY VALUES(1056,'PATTERSON',10,10000,'FINANCE')
INSERT INTO EMPSALARY VALUES(1076,'FIRREL',5,7000,'MARKETING')
INSERT INTO EMPSALARY VALUES(1088,'PATTERSON',10,12500,'FINANCE')
INSERT INTO EMPSALARY VALUES(1102,'BONDUR',2,5000,'HUMAN RESOURCES')
INSERT INTO EMPSALARY VALUES(1143,'BOW',2,5000,'SALES')
INSERT INTO EMPSALARY VALUES(1165,'JENNINGS',2,5000,'SALES')
INSERT INTO EMPSALARY VALUES(1166,'THOMPSON',10,10000,'MARKETING')

SELECT *FROM EMPSALARY

--1.Find employeenumber, Name & Max salary from above table 
SELECT EMPLOYEENUMBER,LASTNAME,MAX(ANNUAL_SALARY)AS MAXSALARY FROM EMPSALARY
GROUP BY  ANNUAL_SALARY,EMPLOYEENUMBER,LASTNAME


--2.Find employeenumber, Name & min salary from above table 
SELECT EMPLOYEENUMBER,LASTNAME,MIN(ANNUAL_SALARY)AS MINSALARY FROM EMPSALARY
GROUP BY ANNUAL_SALARY,EMPLOYEENUMBER,LASTNAME


--3.Find employeenumber, Name & average salary from above table 
SELECT EMPLOYEENUMBER,LASTNAME,AVG(ANNUAL_SALARY)AS AVGSALARY FROM EMPSALARY
GROUP BY ANNUAL_SALARY,EMPLOYEENUMBER,LASTNAME


--4.Find Count of employeenumber with respect to  salary (Hint – Group by column salary) 
SELECT COUNT(EMPLOYEENUMBER)EMPLOYEECOUNT FROM EMPSALARY
GROUP BY ANNUAL_SALARY


--5.Find average salary consumed by each department 
SELECT AVG(ANNUAL_SALARY)AS AVGSALARYBYDEPT, DEPARTMENT FROM EMPSALARY 
GROUP BY DEPARTMENT


--6.Find sum of salary for each level in above table 
SELECT SUM(ANNUAL_SALARY)AS SUMOFSALARY,LEVEL FROM EMPSALARY 
GROUP BY LEVEL

--7.Find count of employee whose average salary greater that 7000
SELECT COUNT(EMPLOYEENUMBER)AS EMPCOUNT,AVG(ANNUAL_SALARY)AVGSALARY FROM EMPSALARY
GROUP BY ANNUAL_SALARY
HAVING AVG(ANNUAL_SALARY)>7000


--8.Find departments whose sum of salary greater that 10000 
SELECT DEPARTMENT,SUM(ANNUAL_SALARY)TOTALSALARY FROM EMPSALARY
GROUP BY DEPARTMENT
HAVING SUM(ANNUAL_SALARY)>10000