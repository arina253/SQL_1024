--SYNTAX
WITH expression_name [(column_name[,......n])]
AS 
 (CTE_QUERY _DEFININTION)

 --CALL CTE
SELECT [COLUMN1,COLUMN2..]FROM EXPRESSION_NAME
SELECT *FROM EXPRESSION_NAME

--CTE TYPES

--NON- RECURSIVE CTE
--TO GENERATE ALL DATABASE NAMES AS WELL AS ROW NUMBER WITH CTE

;WITH ROWCTE (ROWNO,NAME)
AS
(
 SELECT
	ROW_NUMBER()OVER(ORDER BY NAME ASC)AS ROWNO,
	NAME
 FROM SYS.DATABASES
 WHERE DATABASE_ID <= 5
 )
 SELECT *FROM ROWCTE

 ---------------------------------------------------------------------------------------------------------------------------

 ;WITH ROWCTE (ROWNO,NAME)
AS
(
 SELECT
	ROW_NUMBER()OVER(ORDER BY NAME ASC)AS ROWNO,
	NAME
 FROM SYS.DATABASES
 WHERE DATABASE_ID <= 5
 )
 SELECT ROWNO FROM ROWCTE AS R
 JOIN (SELECT 1 AS ID) AS B
 ON R.ROWNO = B.ID

 --------------------------------------------------------------------------------------------------------------------------

 --RECURSIVE CTE
 IF WE CREATE CTE AND CTE CALL ITSELF CALLED RECURSIVE CTE.
 
--RECURSIVE CTE

 DECLARE @ROWNO INT = 1;
 ;WITH ROWCTE AS
	(
	  SELECT @ROWNO AS ROWNO
	    UNION ALL
	  SELECT ROWNO+1
	 FROM ROWCTE
	 WHERE ROWNO<10
	 )
 SELECT *FROM ROWCTE

------------------------------------------------------------------------------------------------------------------------------

--CTE WITHOUT UNION ALL
--TO FIND OUT THE WEEK NUMBER OF THE START DATE.

DECLARE @STARTDATE DATETIME,
        @ENDDATE DATETIME;

SELECT @STARTDATE = GETDATE(),
       @ENDDATE = GETDATE()+16

SELECT @STARTDATE STARTDATE, @ENDDATE ENDDATE

;WITH MYCTE AS
(
	SELECT 1 AS ROWNO,
		   @STARTDATE STARTDATE,
		   'W - ' + 
		   CONVERT(VARCHAR(2),DATEPART(WK, @STARTDATE))
		   + ' / D ( ' + CONVERT(VARCHAR(2),@STARTDATE,106)
		   + ' )' AS 'WEEKNUMBER'
)
SELECT ROWNO,CONVERT (VARCHAR(10),STARTDATE,105)AS STARTDATE,WEEKNUMBER FROM MYCTE

--CTE WITHOUT UNION ALL
--TO FIND OUT THE WEEK NUMBER OF THE END DATE

DECLARE @STARTDATE DATETIME,
        @ENDDATE DATETIME

SELECT @STARTDATE = GETDATE(),
       @ENDDATE = GETDATE() + 16

SELECT @STARTDATE STARTDATE, @ENDDATE ENDDATE

;WITH MYCTE AS 
(
  SELECT 1 AS ROWNO,
  @ENDDATE ENDDATE,
  ' W '
  + CONVERT(VARCHAR(2),DATEPART(WK,@ENDDATE))
  + ' / D ( '
  --+ CONVERT(VARCHAR(2),@ENDDATE,106)
  + CONVERT(VARCHAR(2), DATEPART(DD,@ENDDATE))
  + ' )' AS  'WEEKNUMBER'
)

SELECT ROWNO, ENDDATE,WEEKNUMBER FROM MYCTE

---------------------------------------------------------------------------------------------------------------------------

--CTE WITH UNION ALL

DECLARE @STARTDATE DATETIME,
        @ENDDATE DATETIME;

SELECT @STARTDATE = GETDATE(),
       @ENDDATE = GETDATE() + 16

--SELECT @STARTDATE STARTDATE,@ENDDATE ENDDATE

;WITH MYCTE AS
(
  SELECT 
   1 AS ROWNO
  ,@STARTDATE STARTDATE,
  'W - '+ CONVERT(VARCHAR(2),DATEPART(WK,@STARTDATE)) + ' /D ( ' +CONVERT(VARCHAR(2),@STARTDATE,106) + ')' AS WEEKNUMBER

UNION ALL
  SELECT 
  ROWNO+1
  ,DATEADD(DAY,1,STARTDATE),
  'W - ' + CONVERT(VARCHAR(2),DATEPART(WK,STARTDATE)) + ' /D ( ' + CONVERT(VARCHAR(2),DATEADD(DAY,1,STARTDATE),106)+ ')' AS WEEKNUMBER

FROM MYCTE
WHERE DATEADD (DAY,1,STARTDATE) < = @ENDDATE
)
SELECT ROWNO,CONVERT(VARCHAR(10),STARTDATE,105)AS STARTDATE,WEEKNUMBER FROM MYCTE

---------------------------------------------------------------------------------------------------------------------------------------------

--HOW MANY WEEKEND AND WEEKDAYS AVAILABLE IN BETWEEN STARTDATE AND ENDDATE?

DECLARE @STARTDATE DATETIME,
        @ENDDATE DATETIME

SELECT @STARTDATE = GETDATE(),
       @ENDDATE = GETDATE() + 7

;WITH MYCTE AS
(   
    SELECT 1 AS ROWNO
	,@STARTDATE STARTDATE
	,' W - ' + CONVERT (VARCHAR(2),DATEPART(WEEK,@STARTDATE)) + ' /D (' + CONVERT(VARCHAR(2),DATEPART(DAY,@STARTDATE),106)+ ' )' AS WEEKNUMBER 
	,DATEPART(WEEKDAY,@STARTDATE) AS WEEKDAY
UNION ALL
     SELECT ROWNO+1
    ,DATEADD(DAY,1,STARTDATE)
    ,' W - ' + CONVERT (VARCHAR(2),DATEPART(WEEK,@STARTDATE)) + ' /D (' + CONVERT(VARCHAR(2),DATEADD(DAY,1,STARTDATE),106)+ ' )' AS WEEKNUMBER
    , DATEPART(WEEKDAY,DATEADD(DAY,1,STARTDATE))AS WEEKDAY
FROM MYCTE
WHERE DATEADD(DAY,1,STARTDATE) <= @ENDDATE
)
SELECT 
	SUM(CASE WHEN WEEKDAY = 1 OR WEEKDAY = 7 THEN 1 ELSE 0 END) AS WEEKENDCOUNT,
	SUM(CASE WHEN WEEKDAY <> 1 AND WEEKDAY <> 7 THEN 1 ELSE 0 END)AS WEEKDAYCOUNT
FROM MYCTE

-------------------------------------------------------------------------------------------------------------------------------

--FIND OUT TOTAL SALE AND TOTAL ORDER FROM ORDERS$ DURING WEEKEND AND WEEKDAYS


SELECT
	CASE WHEN DATEPART(WEEKDAY,[ORDER DATE]) IN (1,7) THEN 'WEEKEND'
	ELSE 'WEEKDAYS'
	END AS DAYTYPE,
	COUNT(*)AS TOTALORDERS,
	SUM(SALES) AS TOTALSALES
FROM ORDERS$
GROUP BY 
		CASE WHEN DATEPART(WEEKDAY,[ORDER DATE]) IN (1,7) THEN 'WEEKEND'
	    ELSE 'WEEKDAYS'
		END











  


